{"version":3,"sources":["script.js"],"names":["gameBoard","document","querySelector","infoDisplay","startCells","go","createBoard","forEach","_cell","index","cellElement","createElement","classList","add","id","addEventListener","addGo","append","e","goDisplay","target","textContent","removeEventListener","checkScore","allSquares","querySelectorAll","winningCombos","array","every","cell","_allSquares$cell$firs","firstChild","contains","square","replaceWith","cloneNode","_allSquares$cell$firs2"],"mappings":"AAAA,aAAA,IAAMA,UAAYC,SAASC,cAAc,cACnCC,YAAcF,SAASC,cAAc,SACrCE,WAAa,CACf,GAAI,GAAI,GACR,GAAI,GAAI,GACR,GAAI,GAAI,IAGRC,GAAK,SAGT,SAASC,cACLF,WAAWG,SAAQ,SAACC,EAAOC,GACvB,IAAMC,EAAcT,SAASU,cAAc,OAC3CD,EAAYE,UAAUC,IAAI,UAC1BH,EAAYI,GAAKL,EACjBC,EAAYK,iBAAiB,QAASC,OACtChB,UAAUiB,OAAOP,EACrB,GACJ,CAIA,SAASM,MAAME,GACX,IAAMC,EAAYlB,SAASU,cAAc,OACzCQ,EAAUP,UAAUC,IAAIR,IACxBa,EAAEE,OAAOH,OAAOE,GAEhBd,GAAY,WAAPA,GAAkB,QAAU,SAEjCF,YAAYkB,YAAc,aAAehB,GAAK,QAC9Ca,EAAEE,OAAOE,oBAAoB,QAASN,OAEtCO,YACJ,CAEA,SAASA,aACL,IAAMC,EAAavB,SAASwB,iBAAiB,WAEvCC,EAAgB,CAClB,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAC7B,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAC7B,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAGtBA,EAAcnB,SAAQ,SAAAoB,GAIlB,GAHmBA,EAAMC,OAAM,SAAAC,GAAI,IAAAC,EAAA,OACJ,QADIA,EAC/BN,EAAWK,GAAME,kBAAU,IAAAD,OAAA,EAA3BA,EAA6BlB,UAAUoB,SAAS,SAAS,IAKzD,OAFA7B,YAAYkB,YAAc,oBAC1BG,EAAWjB,SAAQ,SAAA0B,GAAM,OAAIA,EAAOC,YAAYD,EAAOE,WAAU,GAAM,GAG/E,IAEAT,EAAcnB,SAAQ,SAAAoB,GAIlB,GAHkBA,EAAMC,OAAM,SAAAC,GAAI,IAAAO,EAAA,OACH,QADGA,EAC9BZ,EAAWK,GAAME,kBAAU,IAAAK,OAAA,EAA3BA,EAA6BxB,UAAUoB,SAAS,QAAQ,IAKxD,OAFA7B,YAAYkB,YAAc,mBAC1BG,EAAWjB,SAAQ,SAAA0B,GAAM,OAAIA,EAAOC,YAAYD,EAAOE,WAAU,GAAM,GAG/E,GACJ,CAzDAhC,YAAYkB,YAAc,oBAY1Bf","file":"script.js","sourcesContent":["const gameBoard = document.querySelector('#gameboard');\r\nconst infoDisplay = document.querySelector('#info');\r\nconst startCells = [\r\n    '', '', '',\r\n    '', '', '',\r\n    '', '', '',\r\n]\r\n\r\nlet go = 'circle';\r\ninfoDisplay.textContent = 'circle goes first';\r\n\r\nfunction createBoard() {\r\n    startCells.forEach((_cell, index) => {\r\n        const cellElement = document.createElement('div');\r\n        cellElement.classList.add('square');\r\n        cellElement.id = index;\r\n        cellElement.addEventListener('click', addGo);\r\n        gameBoard.append(cellElement);\r\n    }) \r\n}\r\n\r\ncreateBoard();\r\n\r\nfunction addGo(e) {\r\n    const goDisplay = document.createElement('div');\r\n    goDisplay.classList.add(go);\r\n    e.target.append(goDisplay);\r\n\r\n    go = go === 'circle' ? 'cross' : 'circle';\r\n\r\n    infoDisplay.textContent = 'it is now ' + go + ' s go';\r\n    e.target.removeEventListener('click', addGo);\r\n\r\n    checkScore()\r\n}\r\n\r\nfunction checkScore() {\r\n    const allSquares = document.querySelectorAll('.square')\r\n    // console.log(allSquares)\r\n    const winningCombos = [\r\n        [0, 1, 2], [3, 4, 5], [6, 7, 8],\r\n        [0, 3, 6], [1, 4, 7], [2, 5, 8],\r\n        [0, 4, 8], [2, 4, 6]\r\n    ]\r\n\r\n    winningCombos.forEach(array => {\r\n        const circleWins = array.every(cell =>\r\n            allSquares[cell].firstChild?.classList.contains('circle'))\r\n\r\n        if (circleWins) {\r\n            infoDisplay.textContent = 'circle wins!'\r\n            allSquares.forEach(square => square.replaceWith(square.cloneNode(true)))\r\n            return\r\n        }\r\n    })\r\n\r\n    winningCombos.forEach(array => {\r\n        const crossWins = array.every(cell =>\r\n            allSquares[cell].firstChild?.classList.contains('cross'))\r\n\r\n        if (crossWins) {\r\n            infoDisplay.textContent = 'cross wins!'\r\n            allSquares.forEach(square => square.replaceWith(square.cloneNode(true)))\r\n            return\r\n        }\r\n    })\r\n}"]}